package Main;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.TimeZone;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import net.sourceforge.barbecue.Barcode;
import net.sourceforge.barbecue.BarcodeException;
import net.sourceforge.barbecue.BarcodeFactory;
import net.sourceforge.barbecue.BarcodeImageHandler;
import net.sourceforge.barbecue.output.OutputException;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author scott
 */
public final class StockIOgui extends javax.swing.JFrame {

    public String FilePath = System.getProperty("user.dir");;
    public String PiSideServer = System.getProperty("user.dir");;
    //public String FilePath = "Y://Stock Levels//";
    //public String PiSideServer = "Y://Stock Levels//";
    public DateFormat dateFormat = new SimpleDateFormat("E/M/yy ");
    public DateFormat dateRef = new SimpleDateFormat("EEE, d MMM yyyy");
    public DateFormat HomeDate = new SimpleDateFormat("EEE, d MMM yyyy ");
    public DateFormat day = new SimpleDateFormat("E");
    public DateFormat Month = new SimpleDateFormat("MMM - yyyy");
    public Calendar cal = Calendar.getInstance();
    public DateFormat Time = new SimpleDateFormat(" h:mm a");

    /**
     * Creates new form StockIOgui
     */
    public StockIOgui() {
        ImageIcon icon = new ImageIcon("S:\\Management\\Stock Levels\\StockIOFavicon.PNG");
        this.setIconImage(icon.getImage());
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        initComponents();
        TextClockWindow();
        ///javax.swing.Timer t = new javax.swing.Timer(1000, (ActionEvent e) -> {
        importstartup();

        //});
        //t.start();
        //show home screen first
        Home.setVisible(true);
        EOD.setVisible(false);
        Out.setVisible(false);
        In.setVisible(false);
        Settings.setVisible(false);
        search.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TimeJ = new javax.swing.JLabel();
        TimeJ.setText(Time.format(cal.getTime()));
        FileMonth = new javax.swing.JLabel();
        FileMonth.setText(Month.format(cal.getTime()));
        RefDate = new javax.swing.JLabel();
        Menu = new javax.swing.JPanel();
        homeButton = new javax.swing.JLabel();
        inButton = new javax.swing.JLabel();
        outButton = new javax.swing.JLabel();
        searchButton = new javax.swing.JLabel();
        checkButton = new javax.swing.JLabel();
        settingsButton = new javax.swing.JLabel();
        Home = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Clock = new javax.swing.JLabel();
        Check1 = new javax.swing.JTextField();
        Check2 = new javax.swing.JTextField();
        Check3 = new javax.swing.JTextField();
        Check4 = new javax.swing.JTextField();
        Check5 = new javax.swing.JTextField();
        Check6 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        Check7 = new javax.swing.JTextField();
        Check8 = new javax.swing.JTextField();
        search = new javax.swing.JPanel();
        searchButton1 = new javax.swing.JLabel();
        Result = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Clock1 = new javax.swing.JLabel();
        Search = new javax.swing.JComboBox<>();
        UnitCost = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        UnitCost1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        searchButton2 = new javax.swing.JLabel();
        Out = new javax.swing.JPanel();
        StockOut = new javax.swing.JTextField();
        StockOut1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        outButton1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Clock6 = new javax.swing.JLabel();
        Settings = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BValue = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        StockItem = new javax.swing.JTextField();
        TValue = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Set = new javax.swing.JLabel();
        Clock3 = new javax.swing.JLabel();
        ROValue = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        SValue = new javax.swing.JTextField();
        Set1 = new javax.swing.JLabel();
        Set2 = new javax.swing.JLabel();
        OCValue = new javax.swing.JTextField();
        Set3 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        PValue = new javax.swing.JTextField();
        Set4 = new javax.swing.JLabel();
        Set5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        IDValue = new javax.swing.JTextArea();
        jLabel34 = new javax.swing.JLabel();
        Set6 = new javax.swing.JLabel();
        Set7 = new javax.swing.JLabel();
        EOD = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Oresult = new javax.swing.JTextArea();
        Clock2 = new javax.swing.JLabel();
        In = new javax.swing.JPanel();
        StockIn = new javax.swing.JTextField();
        StockIn1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        inButton1 = new javax.swing.JLabel();
        Clock5 = new javax.swing.JLabel();

        RefDate.setText(dateRef.format(cal.getTime()));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 46, 108));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Menu.setBackground(new java.awt.Color(0, 46, 108));
        Menu.setForeground(new java.awt.Color(0, 46, 108));
        Menu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Home_32px.png"))); // NOI18N
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeButtonMouseClicked(evt);
            }
        });
        Menu.add(homeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 42, -1, -1));

        inButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Plus_32px.png"))); // NOI18N
        inButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inButtonMouseClicked(evt);
            }
        });
        Menu.add(inButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 119, -1, -1));

        outButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Minus_32px.png"))); // NOI18N
        outButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outButtonMouseClicked(evt);
            }
        });
        Menu.add(outButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 196, -1, -1));

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Search_32px.png"))); // NOI18N
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });
        Menu.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 273, -1, -1));

        checkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Todo List_32px.png"))); // NOI18N
        checkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkButtonMouseClicked(evt);
            }
        });
        Menu.add(checkButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 350, -1, -1));

        settingsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Settings_32px.png"))); // NOI18N
        settingsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsButtonMouseClicked(evt);
            }
        });
        Menu.add(settingsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 427, -1, -1));

        getContentPane().add(Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 510));

        Home.setBackground(new java.awt.Color(102, 102, 102));
        Home.setForeground(new java.awt.Color(102, 102, 102));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 60)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("StockIO");

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Stock.");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Made.");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Easy.");

        Clock.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Clock.setForeground(new java.awt.Color(255, 255, 255));

        Check1.setBackground(new java.awt.Color(102, 102, 102));
        Check1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Check1.setForeground(new java.awt.Color(255, 255, 255));
        Check1.setBorder(null);
        Check1.setCaretColor(new java.awt.Color(102, 102, 102));
        Check1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Check1.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Check1.setSelectedTextColor(new java.awt.Color(102, 102, 102));

        Check2.setBackground(new java.awt.Color(102, 102, 102));
        Check2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Check2.setForeground(new java.awt.Color(255, 255, 255));
        Check2.setBorder(null);
        Check2.setCaretColor(new java.awt.Color(102, 102, 102));
        Check2.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Check2.setSelectedTextColor(new java.awt.Color(102, 102, 102));

        Check3.setBackground(new java.awt.Color(102, 102, 102));
        Check3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Check3.setForeground(new java.awt.Color(255, 255, 255));
        Check3.setBorder(null);
        Check3.setCaretColor(new java.awt.Color(102, 102, 102));
        Check3.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Check3.setSelectedTextColor(new java.awt.Color(102, 102, 102));

        Check4.setBackground(new java.awt.Color(102, 102, 102));
        Check4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Check4.setForeground(new java.awt.Color(255, 255, 255));
        Check4.setBorder(null);
        Check4.setCaretColor(new java.awt.Color(102, 102, 102));
        Check4.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Check4.setSelectedTextColor(new java.awt.Color(102, 102, 102));

        Check5.setBackground(new java.awt.Color(102, 102, 102));
        Check5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Check5.setForeground(new java.awt.Color(255, 255, 255));
        Check5.setBorder(null);
        Check5.setCaretColor(new java.awt.Color(102, 102, 102));
        Check5.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Check5.setSelectedTextColor(new java.awt.Color(102, 102, 102));

        Check6.setBackground(new java.awt.Color(102, 102, 102));
        Check6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Check6.setForeground(new java.awt.Color(255, 255, 255));
        Check6.setText("Error Checking Log:");
        Check6.setBorder(null);
        Check6.setCaretColor(new java.awt.Color(102, 102, 102));
        Check6.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Check6.setDisabledTextColor(new java.awt.Color(102, 102, 102));

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/icons8_Page_64px.png"))); // NOI18N
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Generate Stock Suppliy Report");

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/icons8_Money_Box_64px.png"))); // NOI18N
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel28MouseClicked(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Generate Stock Value Report");

        Check7.setBackground(new java.awt.Color(102, 102, 102));
        Check7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Check7.setForeground(new java.awt.Color(255, 255, 255));
        Check7.setBorder(null);
        Check7.setCaretColor(new java.awt.Color(102, 102, 102));
        Check7.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Check7.setSelectedTextColor(new java.awt.Color(102, 102, 102));

        Check8.setBackground(new java.awt.Color(102, 102, 102));
        Check8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Check8.setForeground(new java.awt.Color(255, 255, 255));
        Check8.setBorder(null);
        Check8.setCaretColor(new java.awt.Color(102, 102, 102));
        Check8.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Check8.setSelectedTextColor(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HomeLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2))
                            .addGroup(HomeLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel4)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel5))
                            .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Check3)
                                .addComponent(Check6, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                                .addComponent(Check5)
                                .addComponent(Check7)
                                .addComponent(Check8, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(Check1)
                    .addComponent(Check4)
                    .addComponent(Check2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26))
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)))
                .addGap(39, 39, 39))
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(79, 79, 79)
                        .addComponent(Check6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Check1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HomeLayout.createSequentialGroup()
                        .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addGroup(HomeLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel27)))
                        .addGap(46, 46, 46)
                        .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(HomeLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel29)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Check4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Check2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Check5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Check3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Check7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Check8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 860, 510));

        search.setBackground(new java.awt.Color(102, 102, 102));
        search.setForeground(new java.awt.Color(102, 102, 102));

        searchButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Search_32px.png"))); // NOI18N
        searchButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButton1MouseClicked(evt);
            }
        });

        Result.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Items In Stock");

        jLabel21.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Search Stock");

        Clock1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Clock1.setForeground(new java.awt.Color(255, 255, 255));

        Search.setBackground(new java.awt.Color(69, 73, 74));
        Search.setForeground(new java.awt.Color(69, 73, 74));
        Search.setBorder(null);
        Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchMouseClicked(evt);
            }
        });

        UnitCost.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));
        UnitCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnitCostActionPerformed(evt);
            }
        });
        UnitCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UnitCostKeyPressed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Price Per Unit");

        UnitCost1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));
        UnitCost1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnitCost1ActionPerformed(evt);
            }
        });
        UnitCost1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UnitCost1KeyPressed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Total Stock Value");

        searchButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Search_32px.png"))); // NOI18N
        searchButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout searchLayout = new javax.swing.GroupLayout(search);
        search.setLayout(searchLayout);
        searchLayout.setHorizontalGroup(
            searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(Clock1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchLayout.createSequentialGroup()
                            .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(searchLayout.createSequentialGroup()
                                    .addComponent(UnitCost, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchLayout.createSequentialGroup()
                                    .addComponent(jLabel24)
                                    .addGap(59, 59, 59)))
                            .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel25)
                                .addGroup(searchLayout.createSequentialGroup()
                                    .addComponent(UnitCost1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(searchButton1))))
                        .addGroup(searchLayout.createSequentialGroup()
                            .addComponent(Result)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(searchButton2))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        searchLayout.setVerticalGroup(
            searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Result, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton2))
                .addGap(5, 5, 5)
                .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(UnitCost, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(UnitCost1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                .addComponent(Clock1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 860, 510));

        Out.setBackground(new java.awt.Color(102, 102, 102));
        Out.setForeground(new java.awt.Color(102, 102, 102));

        StockOut.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));
        StockOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                StockOutKeyPressed(evt);
            }
        });

        StockOut1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Quantity");

        outButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Minus_32px.png"))); // NOI18N
        outButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outButton1MouseClicked(evt);
            }
        });

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Stock Item");

        jLabel17.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Stock Out");

        Clock6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Clock6.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout OutLayout = new javax.swing.GroupLayout(Out);
        Out.setLayout(OutLayout);
        OutLayout.setHorizontalGroup(
            OutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(OutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Clock6, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addGroup(OutLayout.createSequentialGroup()
                        .addComponent(StockOut1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outButton1))
                    .addComponent(StockOut, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        OutLayout.setVerticalGroup(
            OutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel17)
                .addGap(59, 59, 59)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StockOut, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StockOut1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                .addComponent(Clock6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(Out, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 860, 510));

        Settings.setBackground(new java.awt.Color(102, 102, 102));
        Settings.setForeground(new java.awt.Color(102, 102, 102));

        jLabel3.setBackground(new java.awt.Color(153, 153, 153));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Admin");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Stock ID");

        BValue.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Barcode ID");

        jLabel8.setBackground(new java.awt.Color(102, 102, 102));
        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Generate New Item");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        StockItem.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        TValue.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Trigger Vaue");

        Set.setBackground(new java.awt.Color(102, 102, 102));
        Set.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        Set.setForeground(new java.awt.Color(255, 255, 255));
        Set.setText("Set/Change");
        Set.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SetMouseClicked(evt);
            }
        });

        Clock3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Clock3.setForeground(new java.awt.Color(255, 255, 255));

        ROValue.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        jLabel30.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Re-Order Quantity");

        jLabel31.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Supplier");

        SValue.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        Set1.setBackground(new java.awt.Color(102, 102, 102));
        Set1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        Set1.setForeground(new java.awt.Color(255, 255, 255));
        Set1.setText("Set/Change");
        Set1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Set1MouseClicked(evt);
            }
        });

        Set2.setBackground(new java.awt.Color(102, 102, 102));
        Set2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        Set2.setForeground(new java.awt.Color(255, 255, 255));
        Set2.setText("Set/Change");
        Set2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Set2MouseClicked(evt);
            }
        });

        OCValue.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        Set3.setBackground(new java.awt.Color(102, 102, 102));
        Set3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        Set3.setForeground(new java.awt.Color(255, 255, 255));
        Set3.setText("Set/Change");
        Set3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Set3MouseClicked(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Order Code");

        jLabel33.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Price");

        PValue.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        Set4.setBackground(new java.awt.Color(102, 102, 102));
        Set4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        Set4.setForeground(new java.awt.Color(255, 255, 255));
        Set4.setText("Set/Change");
        Set4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Set4MouseClicked(evt);
            }
        });

        Set5.setBackground(new java.awt.Color(102, 102, 102));
        Set5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        Set5.setForeground(new java.awt.Color(255, 255, 255));
        Set5.setText("Set/Change");
        Set5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Set5MouseClicked(evt);
            }
        });

        IDValue.setColumns(20);
        IDValue.setRows(5);
        jScrollPane1.setViewportView(IDValue);

        jLabel34.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Item Description");

        Set6.setBackground(new java.awt.Color(102, 102, 102));
        Set6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        Set6.setForeground(new java.awt.Color(255, 255, 255));
        Set6.setText("Set/Change");
        Set6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Set6MouseClicked(evt);
            }
        });

        Set7.setBackground(new java.awt.Color(102, 102, 102));
        Set7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        Set7.setForeground(new java.awt.Color(255, 255, 255));
        Set7.setText("Search");
        Set7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Set7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout SettingsLayout = new javax.swing.GroupLayout(Settings);
        Settings.setLayout(SettingsLayout);
        SettingsLayout.setHorizontalGroup(
            SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addGroup(SettingsLayout.createSequentialGroup()
                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(StockItem, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SettingsLayout.createSequentialGroup()
                                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(SettingsLayout.createSequentialGroup()
                                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(ROValue, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TValue, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Set1)
                                            .addComponent(Set)))
                                    .addGroup(SettingsLayout.createSequentialGroup()
                                        .addComponent(PValue, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Set4))
                                    .addComponent(jLabel33)
                                    .addComponent(jLabel34))
                                .addGap(38, 38, 38)
                                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(SValue, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(OCValue, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BValue, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SettingsLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(Clock3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(Set5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(180, 180, 180))
        );
        SettingsLayout.setVerticalGroup(
            SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(StockItem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Set7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SettingsLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ROValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33))
                    .addGroup(SettingsLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OCValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Set4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SettingsLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(Clock3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SettingsLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(SettingsLayout.createSequentialGroup()
                                .addComponent(Set6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(Settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 860, 510));

        EOD.setBackground(new java.awt.Color(102, 102, 102));
        EOD.setForeground(new java.awt.Color(102, 102, 102));

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("End Of Day");

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Execute");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        Oresult.setBackground(new java.awt.Color(255, 255, 255));
        Oresult.setColumns(20);
        Oresult.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Oresult.setForeground(new java.awt.Color(204, 204, 204));
        Oresult.setRows(5);
        Oresult.setBorder(null);
        jScrollPane3.setViewportView(Oresult);

        Clock2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Clock2.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout EODLayout = new javax.swing.GroupLayout(EOD);
        EOD.setLayout(EODLayout);
        EODLayout.setHorizontalGroup(
            EODLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EODLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(EODLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Clock2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(586, Short.MAX_VALUE))
        );
        EODLayout.setVerticalGroup(
            EODLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EODLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel12)
                .addGap(33, 33, 33)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(Clock2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(EOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 860, 510));

        In.setBackground(new java.awt.Color(102, 102, 102));
        In.setForeground(new java.awt.Color(102, 102, 102));

        StockIn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));
        StockIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StockInActionPerformed(evt);
            }
        });
        StockIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                StockInKeyPressed(evt);
            }
        });

        StockIn1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));

        jLabel18.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Quantity");

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Stock Item");

        jLabel20.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Stock In");

        inButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Plus_32px.png"))); // NOI18N
        inButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inButton1MouseClicked(evt);
            }
        });

        Clock5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Clock5.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout InLayout = new javax.swing.GroupLayout(In);
        In.setLayout(InLayout);
        InLayout.setHorizontalGroup(
            InLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(InLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18)
                    .addGroup(InLayout.createSequentialGroup()
                        .addComponent(StockIn1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inButton1))
                    .addComponent(StockIn, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
            .addGroup(InLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(InLayout.createSequentialGroup()
                    .addGap(315, 315, 315)
                    .addComponent(Clock5, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(315, Short.MAX_VALUE)))
        );
        InLayout.setVerticalGroup(
            InLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel20)
                .addGap(59, 59, 59)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StockIn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StockIn1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inButton1))
                .addContainerGap(247, Short.MAX_VALUE))
            .addGroup(InLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(InLayout.createSequentialGroup()
                    .addGap(234, 234, 234)
                    .addComponent(Clock5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(235, Short.MAX_VALUE)))
        );

        getContentPane().add(In, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 860, 510));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    Map<String, String> Job = new HashMap<>(); // a cross referecen point for cosignments projects
    List<String> staff = new ArrayList<>(); // directly references the projects using staff names
    Map<String, Integer> cosign = new HashMap<>(); // store cosignment stock figures
    Map<String, Integer> StockIO = new HashMap<>(); //store all stock and quantities
    List<Integer> list = new ArrayList<>(); //an array being used as a crosspoint reference between the hashmaps
    Map<String, String> itin = new HashMap<>(); //store all barcode variations
    Map<String, Integer> Trigger = new HashMap<>(); // stores all the relating stock items and their barcode integers
    Map<String, Integer> consign = new HashMap<>(); // stock levels for consignment stock
    Map<String, Integer> StockUsage = new HashMap<>();
    Map<String, Integer> Archive = new HashMap<>();
    Map<String, Integer> StockUsageIn = new HashMap<>();
    Map<String, Double> Pricing = new HashMap<>(); // Stores all pricing for items 
    Map<String, String> OrderNumber = new HashMap<>(); // Stores re order numbers
    Map<String, String> Supplier = new HashMap<>(); // Stores all suppiers for ordering stock items
    Map<String, String> ItemDesc = new HashMap<>();
    Map<String, Integer> ReOrder = new HashMap<>();

    public void TextClockWindow() {

        this.pack();

        javax.swing.Timer t = new javax.swing.Timer(1000, (ActionEvent e) -> {
            Calendar calendar = new GregorianCalendar();
            String am_pm;
            calendar.setTimeZone(TimeZone.getDefault());

            Calendar now = Calendar.getInstance();
            int h = now.get(Calendar.HOUR_OF_DAY);
            int m = now.get(Calendar.MINUTE);
            int s = now.get(Calendar.SECOND);

            if (calendar.get(Calendar.AM_PM) == 0) {
                am_pm = "AM";

            } else {
                am_pm = "PM";

            }   // Code to Determine whether the time is AM or PM

            Clock.setText("" + h + ":" + m + ":" + s + " " + am_pm);

        });
        t.start();
    }

    public void importstartup() {
        FileInputStream file21 = null;
        try {
            file21 = new FileInputStream(FilePath + "ADMIN\\SValues.ser");
            ObjectInputStream in21 = null;
            try {
                in21 = new ObjectInputStream(file21);
            } catch (IOException ex) {
                Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
            }
            Supplier = (Map<String, String>) in21.readObject();
            in21.close();
            file21.close();// TODO add your handling code here:
        } catch (FileNotFoundException ex) {
            Check7.setText("initial start up Supplier import error");
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        FileInputStream file212 = null;
        try {
            file212 = new FileInputStream(FilePath + "ADMIN\\ROValues.ser");
            ObjectInputStream in212 = null;
            try {
                in212 = new ObjectInputStream(file212);
            } catch (IOException ex) {
                Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
            }
            ReOrder = (Map<String, Integer>) in212.readObject();
            in212.close();
            file212.close();// TODO add your handling code here:
        } catch (FileNotFoundException ex) {
            Check8.setText("initial start up Supplier import error");
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
        String JMonth = FileMonth.getText();
        FileInputStream file201 = null;
        try {
            file201 = new FileInputStream(FilePath + "ADMIN\\OCValues.ser");
            ObjectInputStream in201 = null;
            try {
                in201 = new ObjectInputStream(file201);
            } catch (IOException ex) {
                Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
            }
            OrderNumber = (Map<String, String>) in201.readObject();
            in201.close();
            file201.close();

        } catch (FileNotFoundException ex) {
            Check1.setText("Initial Order Number import error.");
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }

        FileInputStream file20 = null;
        try {
            file20 = new FileInputStream(FilePath + "ADMIN\\PValues.ser");
            ObjectInputStream in20 = null;
            try {
                in20 = new ObjectInputStream(file20);
            } catch (IOException ex) {
                Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
            }
            Pricing = (Map<String, Double>) in20.readObject();
            in20.close();
            file20.close();// TODO add your handling code here:
        } catch (FileNotFoundException ex) {

            Check1.setText("Initial Stock Price import error.");
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }

        FileInputStream file2 = null;
        try {
            file2 = new FileInputStream(FilePath + "ADMIN\\hashmap.ser");
            ObjectInputStream in2 = null;
            try {
                in2 = new ObjectInputStream(file2);
            } catch (IOException ex) {
                Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
            }
            StockIO = (Map<String, Integer>) in2.readObject();
            in2.close();
            file2.close();// TODO add your handling code here:
        } catch (FileNotFoundException ex) {

            Check1.setText("Initial Stock Level import error.");
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }

        FileInputStream file = null;
        try {
            file = new FileInputStream(FilePath + "ADMIN\\BValues.ser");
            ObjectInputStream in = null;
            try {
                in = new ObjectInputStream(file);
            } catch (IOException ex) {
                Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
            }
            itin = (Map<String, String>) in.readObject();
            in.close();
            file.close();// TODO add your handling code here:
        } catch (FileNotFoundException ex) {

            Check2.setText("initial start up barcode import error");
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }

        FileInputStream file1 = null;
        try {
            file1 = new FileInputStream(FilePath + "ADMIN\\TValues.ser");
            ObjectInputStream in1 = null;
            try {
                in1 = new ObjectInputStream(file1);
            } catch (IOException ex) {
                Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
            }
            Trigger = (Map<String, Integer>) in1.readObject();
            in1.close();
            file1.close();// TODO add your handling code here:
        } catch (FileNotFoundException ex) {

            Check3.setText("Initial Trigger Value import error");
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        if (Check1.getText().equals("") && Check2.getText().equals("") && Check3.getText().equals("") && Check4.getText().equals("") && Check5.getText().equals("")) {
            Check6.setText("Error Checking Log: Pass");
        } else {
            Check6.setText("Error Checking Log: Fail");
        }
    }

    public void NegCheck() {

        this.pack();

        javax.swing.Timer t = new javax.swing.Timer(1000, (ActionEvent e) -> {

        });
        t.start();
    }

    private void homeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseClicked
        Home.setVisible(true);
        EOD.setVisible(false);
        Out.setVisible(false);
        In.setVisible(false);
        Settings.setVisible(false);
        search.setVisible(false);
    }//GEN-LAST:event_homeButtonMouseClicked

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        Home.setVisible(false);
        EOD.setVisible(false);
        Out.setVisible(false);
        In.setVisible(false);
        Settings.setVisible(false);
        search.setVisible(true);
    }//GEN-LAST:event_searchButtonMouseClicked

    private void inButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inButtonMouseClicked
        Home.setVisible(false);
        EOD.setVisible(false);
        Out.setVisible(false);
        In.setVisible(true);
        Settings.setVisible(false);
        search.setVisible(false);
    }//GEN-LAST:event_inButtonMouseClicked

    private void outButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outButtonMouseClicked
        Home.setVisible(false);
        EOD.setVisible(false);
        Out.setVisible(true);
        In.setVisible(false);
        Settings.setVisible(false);
        search.setVisible(false);
    }//GEN-LAST:event_outButtonMouseClicked

    private void checkButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkButtonMouseClicked
        Home.setVisible(false);
        EOD.setVisible(true);
        Out.setVisible(false);
        In.setVisible(false);
        Settings.setVisible(false);
        search.setVisible(false);
    }//GEN-LAST:event_checkButtonMouseClicked

    private void settingsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsButtonMouseClicked
        Home.setVisible(false);
        EOD.setVisible(false);
        Out.setVisible(false);
        In.setVisible(false);
        Settings.setVisible(true);
        search.setVisible(false);

    }//GEN-LAST:event_settingsButtonMouseClicked

    private void searchButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButton1MouseClicked
        String Stock = String.valueOf(Search.getSelectedItem());
        Integer Entry = StockIO.get(Stock);

        double price = Pricing.get(Search.getSelectedItem());

        UnitCost.setText(String.valueOf("£" + price));
        double res = Math.floor(price * Entry);
        System.out.println(res);
        UnitCost1.setText("£" + String.valueOf(res));

    }//GEN-LAST:event_searchButton1MouseClicked

    private void outButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outButton1MouseClicked
                String JMonth = FileMonth.getText();
        String FileDate = RefDate.getText();
        File dir1 = new File(FilePath + "ADMIN");
        File Admin = new File(FilePath + "ADMIN/Usage Reports/");

        String Stock = StockIn.getText();
        String number = StockIn1.getText();
        int Quant = Integer.parseInt(number);

        if (StockIO.containsKey(Stock)) {
            StockIO.put(Stock, StockIO.get(Stock) - Quant);
        } else {
            StockIO.put(Stock, Quant);
        }
        if (StockUsageIn.containsKey(Stock)) {
            StockUsageIn.put(Stock, StockUsageIn.get(Stock) - Quant);
        } else {
            StockUsageIn.put(Stock, Quant);
        }
        StockIn.setText("");
        StockIn1.setText("");
                
        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream(dir1 + "/" + "hashmap.ser");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
        ObjectOutputStream oos = null;
        try {
            oos = new ObjectOutputStream(fos);
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);

        }
        try {
            oos.writeObject(StockIO);
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);

        }
        try {
            oos.close();
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);

        }
        try {
            fos.close();
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_outButton1MouseClicked

    private void StockInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StockInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StockInActionPerformed

    private void inButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inButton1MouseClicked
        String JMonth = FileMonth.getText();
        String FileDate = RefDate.getText();
        File dir1 = new File(FilePath + "ADMIN");
        File Admin = new File(FilePath + "ADMIN/Usage Reports/");

        String Stock = StockIn.getText();
        String number = StockIn1.getText();
        int Quant = Integer.parseInt(number);

        if (StockIO.containsKey(Stock)) {
            StockIO.put(Stock, StockIO.get(Stock) + Quant);
        } else {
            StockIO.put(Stock, Quant);
        }
        
        StockIn.setText("");
        StockIn1.setText("");
                
        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream(dir1 + "/" + "hashmap.ser");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
        ObjectOutputStream oos = null;
        try {
            oos = new ObjectOutputStream(fos);
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);

        }
        try {
            oos.writeObject(StockIO);
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);

        }
        try {
            oos.close();
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);

        }
        try {
            fos.close();
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_inButton1MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        String S = SValue.getText();
        String TV = StockItem.getText();
        Supplier.put(TV, S);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "SValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(Supplier);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        SValue.setText("");
        
        int T = Integer.parseInt(TValue.getText());
        Trigger.put(TV, T);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "TValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(Trigger);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        TValue.setText("");
        
        String OC = OCValue.getText();
        OrderNumber.put(TV, OC);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "OCValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(OrderNumber);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        
        OCValue.setText("");
        
        Double P = Double.parseDouble(PValue.getText());
        Pricing.put(TV, P);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "PValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(Pricing);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        PValue.setText("");
        
        String B = BValue.getText();
        itin.put(B, TV);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "BValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(itin);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        BValue.setText("");
        
        String ID = IDValue.getText();
        ItemDesc.put(TV, ID);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "IDValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(ItemDesc);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        IDValue.setText("");
        int RO = Integer.parseInt(ROValue.getText());
        ReOrder.put(TV, RO);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "ROValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(ReOrder);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        ROValue.setText("");
                            
    }//GEN-LAST:event_jLabel8MouseClicked

    private void SetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SetMouseClicked
        String JMonth = FileMonth.getText();
        int T = Integer.parseInt(TValue.getText());
        String TV = StockItem.getText();
        Trigger.put(TV, T);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "TValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(Trigger);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        TValue.setText("");
    }//GEN-LAST:event_SetMouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        Oresult.setText("");
        StockIO.keySet().forEach((key) -> {
            String stock_item = key;
            Integer stock_value = StockIO.get(key);
            Integer T = Trigger.get(key);
            if (stock_value < T) {
                Oresult.append("Item: " + stock_item + " Quantity is low, stock = " + stock_value + "\n");
            }
        });
    }//GEN-LAST:event_jLabel14MouseClicked

    private void StockInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StockInKeyPressed
        TreeMap<String, String> searchStock = new TreeMap<>();
        searchStock.putAll(OrderNumber);
        String search = StockIn.getText();

        for (Entry<String, String> e : searchStock.entrySet()) {
            if (e.getKey().startsWith(search)) {
                System.out.println();
            }
        }
        String Stock = StockIn.getText();
        String Entry = itin.get(Stock);
        try {
            int key = evt.getKeyCode();
            if (key == KeyEvent.VK_ENTER) {
                StockIn.setText(Entry);
            }
        } catch (Exception e) {
            {
                System.out.println("not in system, please add");
            }
        }
    }//GEN-LAST:event_StockInKeyPressed

    private void StockOutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StockOutKeyPressed
        TreeMap<String, Integer> searchStock = new TreeMap<>();
        searchStock.putAll(StockIO);
        String search = StockOut.getText();

        for (Entry<String, Integer> e : searchStock.entrySet()) {
            if (e.getKey().startsWith(search)) {
                System.out.println();
            }
        }
        String Stock = StockOut.getText();
        String Entry = itin.get(Stock);
        try {
            int key = evt.getKeyCode();
            if (key == KeyEvent.VK_ENTER) {
                StockOut.setText(Entry);
            }
        } catch (Exception e) {
            {
                System.out.println("not in system, please add");
            }
        }
    }//GEN-LAST:event_StockOutKeyPressed

    private void SearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchMouseClicked
        TreeMap<String, String> treeMap = new TreeMap<String, String>(new Comparator<String>() {
            public int compare(String o1, String o2) {
                return o1.toLowerCase().compareTo(o2.toLowerCase());
            }
        });

        treeMap.putAll(itin);

        for (Entry<String, String> e : treeMap.entrySet()) {

            Search.addItem(e.getValue());

        }
    }//GEN-LAST:event_SearchMouseClicked

    private void UnitCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnitCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnitCostActionPerformed

    private void UnitCostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UnitCostKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnitCostKeyPressed

    private void UnitCost1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnitCost1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnitCost1ActionPerformed

    private void UnitCost1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UnitCost1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnitCost1KeyPressed

    private void searchButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButton2MouseClicked
        String Stock = String.valueOf(Search.getSelectedItem());
        Result.setText(String.valueOf(StockIO.get(Stock)));
    }//GEN-LAST:event_searchButton2MouseClicked

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked

        Map<String, ArrayList<String>> reverseMap = new HashMap<>(
                Supplier.entrySet().stream()
                        .collect(Collectors.groupingBy(Map.Entry::getValue)).values().stream()
                        .collect(Collectors.toMap(
                                item -> item.get(0).getValue(),
                                item -> new ArrayList<>(
                                        item.stream()
                                                .map(Map.Entry::getKey)
                                                .collect(Collectors.toList())
                                ))
                        ));
        FileWriter fstream = null;
        BufferedWriter out;
        String JMonth = FileMonth.getText();
        try {
            // create your filewriter and bufferedreader
            fstream = new FileWriter(FilePath + "\\" + JMonth + " Stock Supplier Report.txt");
        } catch (IOException ex) {

            JOptionPane.showMessageDialog(null, "error 001 failed to create dir");
        }
        out = new BufferedWriter(fstream);
        Iterator<Entry<String, ArrayList<String>>> it = reverseMap.entrySet().iterator();
        int i = 1;

        while (it.hasNext()) {
            try {
                Entry<String, ArrayList<String>> pairs = it.next();
                String listString = "No." + i + "";

                for (String s : pairs.getValue()) {
                    System.out.println(s);
                    listString += "\r\n-------------------------------------\r\n" + s + "\r\n-------------------------------------\r\n" + OrderNumber.get(s) + "\r\n-------------------------------------\r\n£" + Pricing.get(s) + "\r\n-------------------------------------\r\n\r\n";

                }
                out.append(pairs.getKey() + "\r\n\r\n" + listString + "\r\n\r\n");
                i++;
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "error 002 failed to iterate database");
            }
        }
        try {
            out.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "error 003 failed to close io stream");
        }
        
    }//GEN-LAST:event_jLabel26MouseClicked

    private void jLabel28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseClicked
        String JMonth = FileMonth.getText();
        FileWriter fstream = null;
        BufferedWriter out;
        try {
            // create your filewriter and bufferedreader
            fstream = new FileWriter(FilePath + "\\" + JMonth + " Cost Reports.txt");
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
        out = new BufferedWriter(fstream);
        Iterator it = Pricing.entrySet().iterator();
        double total = 0;
        while (it.hasNext()) {
            Map.Entry pair = (Map.Entry) it.next();
            if (StockIO.get(pair.getKey()) == null) {
                JOptionPane.showMessageDialog(null, "error 007 Item with null stock level detected: "+ pair.getKey());
            } else {
                int par = StockIO.get(pair.getKey());
                Double pri = Double.valueOf(par);
                Double quant = pri;
                double q = (double) pair.getValue();
                double sum = q * quant;

                try {
                    System.out.println(pair.getKey() + " = £" + sum + "\r\n");
                    out.append(pair.getKey() + " = £" + sum + "\r\n");
                    total += sum;
                } catch (IOException ex) {
                    Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            it.remove(); // avoids a ConcurrentModificationException
        }
        try {
            out.append("\t\r\nTotal Value in Stock: £" + String.valueOf(total));
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            out.close();
        } catch (IOException ex) {
            Logger.getLogger(StockIOgui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel28MouseClicked

    private void Set1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set1MouseClicked
        int T = Integer.parseInt(ROValue.getText());
        String TV = StockItem.getText();
        ReOrder.put(TV, T);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "ROValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(ReOrder);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        ROValue.setText("");
        
    }//GEN-LAST:event_Set1MouseClicked

    private void Set2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set2MouseClicked
        String S = SValue.getText();
        String TV = StockItem.getText();
        Supplier.put(TV, S);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "SValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(Supplier);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        SValue.setText("");
    }//GEN-LAST:event_Set2MouseClicked

    private void Set3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set3MouseClicked
        String OC = OCValue.getText();
        String TV = StockItem.getText();
        OrderNumber.put(TV, OC);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "OCValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(OrderNumber);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        
        OCValue.setText("");
    }//GEN-LAST:event_Set3MouseClicked

    private void Set4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set4MouseClicked
        Double T = Double.parseDouble(PValue.getText());
        String TV = StockItem.getText();
        Pricing.put(TV, T);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN\\PValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(Pricing);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        PValue.setText("");
        System.out.println(Pricing);
    }//GEN-LAST:event_Set4MouseClicked

    private void Set5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set5MouseClicked
        String B = BValue.getText();
        String TV = StockItem.getText();
        itin.put(B, TV);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "BValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(itin);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        BValue.setText("");
    }//GEN-LAST:event_Set5MouseClicked

    private void Set6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set6MouseClicked
        String ID = IDValue.getText();
        String TV = StockItem.getText();
        ItemDesc.put(TV, ID);
        try {
            try (FileOutputStream fos = new FileOutputStream(FilePath + "ADMIN" + "/" + "IDValues.ser")) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(ItemDesc);
                oos.close();
            }
            System.out.printf("Serialized HashMap data is saved in hashmap.ser");
        } catch (IOException ioe) {
        }
        IDValue.setText("");
    }//GEN-LAST:event_Set6MouseClicked

    private void Set7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set7MouseClicked
        TValue.setText(String.valueOf( Trigger.get(StockItem.getText())));
        ROValue.setText(String.valueOf(ReOrder.get(StockItem.getText())));
        PValue.setText(String.valueOf(Pricing.get(StockItem.getText())));
        SValue.setText(Supplier.get(StockItem.getText()));
        OCValue.setText(OrderNumber.get(StockItem.getText()));
        IDValue.setText(ItemDesc.get(StockItem.getText()));
    }//GEN-LAST:event_Set7MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockIOgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockIOgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockIOgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockIOgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockIOgui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BValue;
    private javax.swing.JTextField Check1;
    private javax.swing.JTextField Check2;
    private javax.swing.JTextField Check3;
    private javax.swing.JTextField Check4;
    private javax.swing.JTextField Check5;
    private javax.swing.JTextField Check6;
    private javax.swing.JTextField Check7;
    private javax.swing.JTextField Check8;
    private javax.swing.JLabel Clock;
    private javax.swing.JLabel Clock1;
    private javax.swing.JLabel Clock2;
    private javax.swing.JLabel Clock3;
    private javax.swing.JLabel Clock5;
    private javax.swing.JLabel Clock6;
    private javax.swing.JPanel EOD;
    public javax.swing.JLabel FileMonth;
    private javax.swing.JPanel Home;
    private javax.swing.JTextArea IDValue;
    private javax.swing.JPanel In;
    private javax.swing.JPanel Menu;
    private javax.swing.JTextField OCValue;
    public javax.swing.JTextArea Oresult;
    private javax.swing.JPanel Out;
    private javax.swing.JTextField PValue;
    private javax.swing.JTextField ROValue;
    public javax.swing.JLabel RefDate;
    private javax.swing.JTextField Result;
    private javax.swing.JTextField SValue;
    private javax.swing.JComboBox<String> Search;
    private javax.swing.JLabel Set;
    private javax.swing.JLabel Set1;
    private javax.swing.JLabel Set2;
    private javax.swing.JLabel Set3;
    private javax.swing.JLabel Set4;
    private javax.swing.JLabel Set5;
    private javax.swing.JLabel Set6;
    private javax.swing.JLabel Set7;
    private javax.swing.JPanel Settings;
    private javax.swing.JTextField StockIn;
    private javax.swing.JTextField StockIn1;
    private javax.swing.JTextField StockItem;
    private javax.swing.JTextField StockOut;
    private javax.swing.JTextField StockOut1;
    private javax.swing.JTextField TValue;
    public javax.swing.JLabel TimeJ;
    public javax.swing.JTextField UnitCost;
    public javax.swing.JTextField UnitCost1;
    private javax.swing.JLabel checkButton;
    private javax.swing.JLabel homeButton;
    private javax.swing.JLabel inButton;
    private javax.swing.JLabel inButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel outButton;
    private javax.swing.JLabel outButton1;
    private javax.swing.JPanel search;
    private javax.swing.JLabel searchButton;
    private javax.swing.JLabel searchButton1;
    private javax.swing.JLabel searchButton2;
    private javax.swing.JLabel settingsButton;
    // End of variables declaration//GEN-END:variables

    private Object filterPrefix(TreeMap<String, Integer> searchStock, String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
